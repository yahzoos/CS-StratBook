// auto-generated
// Code generated by GUI builder.

package main

import (
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/widget"
	"github.com/yahzoos/CS-StratBook/cmd/pkg/MetadataExplorer"
)

type gui struct {
	win             fyne.Window
	Tags_path       string
	Annotation_path string
}

func newGUI(tagsPath, annotationPath string) *gui {
	return &gui{
		Tags_path:       tagsPath,
		Annotation_path: annotationPath,
	}
}

func (g *gui) makeUI() fyne.CanvasObject {
	// Create entries initialized with current settings
	tagsEntry := widget.NewEntry()
	tagsEntry.SetText(g.Tags_path)

	annotationEntry := widget.NewEntry()
	annotationEntry.SetText(g.Annotation_path)

	metadataTabContent := MetadataExplorer.MetadataExplorerUI(g.Tags_path)

	// Save button for tags path
	saveTagsButton := widget.NewButton("Save Tags Path", func() {
		g.Tags_path = tagsEntry.Text
		SaveSettings(Settings{
			TagsPath:       g.Tags_path,
			AnnotationPath: g.Annotation_path, // keep current value
		})
		checkTagsFile(g.Tags_path) // ensure file exists
	})

	// Save button for annotation path
	saveAnnotationButton := widget.NewButton("Save Annotation Path", func() {
		g.Annotation_path = annotationEntry.Text
		SaveSettings(Settings{
			TagsPath:       g.Tags_path, // keep current value
			AnnotationPath: g.Annotation_path,
		})
	})

	return container.NewVBox(
		container.NewAppTabs(
			container.NewTabItem("Home",
				container.NewVBox(
					container.NewGridWithColumns(3,
						widget.NewLabel("Tags Path:"),
						tagsEntry,
						saveTagsButton),
					container.NewGridWithColumns(3,
						widget.NewLabel("Annotation Folder:"),
						annotationEntry,
						saveAnnotationButton),
					widget.NewButton("Generate New Tags", g.generate_tags),
				),
			),
			container.NewTabItem("Metadata Explorer", metadataTabContent),
			//container.NewVBox()), //MetadataExplorer.MetadataExplorer())),
		),
	)
}
func (g *gui) makeWindow(a fyne.App) fyne.Window {
	w := a.NewWindow("main.gui.go")
	g.win = w
	w.Resize(fyne.NewSize(450, 319))
	w.SetContent(g.makeUI())
	return w
}
